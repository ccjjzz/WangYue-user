apply plugin: 'com.android.application'
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: 'kotlinx-serialization'
apply plugin: 'walle'

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdkVersion externalCompileSdkVersion
    buildToolsVersion externalBuildToolsVersion

    defaultConfig {
        applicationId "com.jiuyue.user"
        minSdkVersion externalMinSdkVersion
        targetSdkVersion externalTargetSdkVersion
        versionCode externalVersionCode
        versionName externalVersionName
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a','x86','x86_64'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                //JPush 上注册的包名对应的 AppKey.
                JPUSH_APPKEY : "f0e832d18dbf83005a3ea998",
                //暂时填写默认值即可.
                JPUSH_CHANNEL : "developer-default",
        ]
    }

    signingConfigs {
        release {
            storeFile file("../app/jiuyue_user.jks")
            storePassword "jiuyue123321"
            keyAlias "jiuyue_user"
            keyPassword "jiuyue123321"
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    flavorDimensions "version"
    productFlavors {
        App {
            dimension "version"
            applicationIdSuffix ""
            versionNameSuffix ""
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            pseudoLocalesEnabled true
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        //打包命名规则
        android.applicationVariants.all { variant ->
            variant.outputs.all {
//                outputFileName = "jieyue-teacher-v${variant.versionName}-${productFlavors[0].name}_${releaseTime()}.apk"
                outputFileName = "jieyue-user-v${variant.versionName}-${releaseTime()}.apk"
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    allprojects {
        configurations.all {
            resolutionStrategy {
                force "androidx.recyclerview:recyclerview:1.2.1"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar","*.aar"])
    implementation externalCoreKtx
    implementation externalAppcompat
    implementation externalMaterial
    implementation externalConstraintLayout
    testImplementation externalJunit
    androidTestImplementation externalAndroidTestJunit
    androidTestImplementation externalAndroidTestEspressoCore
    implementation externalSwpeRefreshLayout
    implementation externalFlexBox
    api project(':tuichat')
    api project(':citypicker')
    //dex分包
    implementation externalAndroidMultiDex
    //rxJava
    implementation externalRxJava2
    implementation externalRxAndroid
    //okhttp3
    implementation externalOkHttp3
    implementation externalOkHttp3Loging
    //retrofit rxjava gson
    implementation externalRetrofit2
    implementation externalRetrofitAdapter
    implementation externalRetrofitConverterGson
    //logger
    implementation externalLogger
    //glide
    implementation externalGlide
    kapt externalGlideCompiler
    implementation externalGlideTransformation
    //Glide使用OkHttp加载
    implementation externalGlideOkhttp
    //BRVAH
    implementation externalBRVAH
    //SmartRefreshLayout
    implementation externalSmartRefreshLayout
    implementation externalSmartRefreshLayoutHeader
    implementation externalSmartRefreshLayoutFooter
    //今日头条适配方案
    implementation externalAutoSize
    // 底部导航栏
    implementation externalEasyNavigation
    //状态栏
    implementation externalUltimatebarx
    // banner
    implementation externalBanner
    // 文本展开收起
    implementation externalExpandableTextView
    //权限申请库
    implementation externalPermissionX
    //微信sdk-微信支付
    implementation externalWechatPay
    //顶部tab
    implementation externalNavigationTabStrip
    //协程
    implementation externalKotlinCoroutines
    //事件分发框架, 类似于EventBus
    implementation externalLiveEventBus
    //弹性阻尼
    implementation externalOverScroll
    //弹窗
    implementation externalXpopup
    //地址、时间选择器
    implementation externalAddressPicker
    implementation externalWheelPicker
    //高德地图
    implementation externalGold3dMap
    implementation externalGoldSearch
    //美团瓦力
    implementation externalWalle
    //极光推送
    implementation externalJpushJcore
    implementation externalJpush
    //侧滑按钮
    implementation externalSwipeDelMenuLayout
    //长图加载
    implementation externalSubScanleImageView
}

